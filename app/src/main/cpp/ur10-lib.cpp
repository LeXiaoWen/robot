/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include <string>
#include "ur10.h"
#include "ur10.cpp"
#include "ur.h"
#include "ur.cpp"
#include "log_utils.h"
/* Header for class com_leo_robot_JNIUtils */

#ifndef _Included_com_leo_robot_JNIUtils
#define _Included_com_leo_robot_JNIUtils
#ifdef __cplusplus
extern "C" {
#endif
UR10 ur10;
UR *ur = new UR();
std::string jstring2str(JNIEnv *env, jstring jstr);
/*
 * Class:     com_leo_robot_JNIUtils
 * Method:    hello
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_leo_robot_JNIUtils_hello
        (JNIEnv *env, jobject) {
//    std::string hello = "这是来自第一个包的信息，请注意查收……";
    UR10 ur10;
    std::string str = ur10.ActionStopJ();
    return env->NewStringUTF(str.c_str());
} ;

#ifdef __cplusplus
}
#endif
#endif
extern "C"
JNIEXPORT jstring JNICALL
Java_com_leo_robot_JNIUtils_getDouble(JNIEnv *env, jobject instance, jdouble num) {


    std::string str = ur10.doubleToString(num);


    return env->NewStringUTF(str.c_str());
}
extern "C"
JNIEXPORT void JNICALL
Java_com_leo_robot_JNIUtils_GetDataPort29999(JNIEnv *env, jobject instance, jstring s_) {
    const char *s = env->GetStringUTFChars(s_, 0);

    // TODO
    std::string str = jstring2str(env, s_);
    ur10.GetDataPort29999(str);
    env->ReleaseStringUTFChars(s_, s);
}extern "C"
JNIEXPORT void JNICALL
Java_com_leo_robot_JNIUtils_GetDataPort30003(JNIEnv *env, jobject instance) {

    // TODO
    ur10.GetDataPort30003();

}extern "C"
JNIEXPORT jstring JNICALL
Java_com_leo_robot_JNIUtils_ActionMove(JNIEnv *env, jobject instance, jstring s_) {
    const char *s = env->GetStringUTFChars(s_, 0);

    // TODO
    std::string move = jstring2str(env, s_);
    std::string str = ur10.ActionMove(move);
    env->ReleaseStringUTFChars(s_, s);

    return env->NewStringUTF(str.c_str());
}extern "C"
JNIEXPORT jstring JNICALL
Java_com_leo_robot_JNIUtils_ActionPose(JNIEnv *env, jobject instance, jstring s_) {
    const char *s = env->GetStringUTFChars(s_, 0);

    // TODO
    std::string pose = jstring2str(env, s_);
    std::string str = ur10.ActionMove(pose);
    env->ReleaseStringUTFChars(s_, s);

    return env->NewStringUTF(str.c_str());
}extern "C"
JNIEXPORT jstring JNICALL
Java_com_leo_robot_JNIUtils_ActionJoint(JNIEnv *env, jobject instance, jstring s_) {
    const char *s = env->GetStringUTFChars(s_, 0);

    // TODO
    std::string joint = jstring2str(env, s_);
    std::string str = ur10.ActionJoint(joint);
    env->ReleaseStringUTFChars(s_, s);

    return env->NewStringUTF(str.c_str());
}extern "C"
JNIEXPORT jstring JNICALL
Java_com_leo_robot_JNIUtils_ActionDash(JNIEnv *env, jobject instance, jstring s_) {
    const char *s = env->GetStringUTFChars(s_, 0);

    // TODO
    std::string dash = jstring2str(env, s_);
    std::string str = ur10.ActionDash(dash);
    env->ReleaseStringUTFChars(s_, s);

    return env->NewStringUTF(str.c_str());
}extern "C"
JNIEXPORT jstring JNICALL
Java_com_leo_robot_JNIUtils_ActionStopJ(JNIEnv *env, jobject instance) {

    // TODO
    std::string str = ur10.ActionStopJ();

    return env->NewStringUTF(str.c_str());
}
//extern "C"
//JNIEXPORT jdouble JNICALL
//Java_com_leo_robot_JNIUtils_HexToDouble(JNIEnv *env, jobject instance, jcharArray chars_) {
//    unsigned char *a = (unsigned char*)env->GetCharArrayElements(chars_, NULL);
//    // TODO
//    double s = ur10.HexToDouble(a);
////    env->ReleaseCharArrayElements(chars_, chars, 0);
//    return s;
//}

extern "C"
JNIEXPORT void JNICALL
Java_com_leo_robot_JNIUtils_SetMoveSpeed(JNIEnv *env, jobject instance, jfloat v) {

    // TODO
    ur10.SetMoveSpeed(v);
}extern "C"
JNIEXPORT void JNICALL
Java_com_leo_robot_JNIUtils_SetMoveAcc(JNIEnv *env, jobject instance, jfloat v) {

    // TODO
    ur10.SetMoveAcc(v);
}extern "C"
JNIEXPORT jstring JNICALL
Java_com_leo_robot_JNIUtils_DoubleToString(JNIEnv *env, jobject instance, jdouble num) {

    // TODO
    std::string str =  ur10.doubleToString(num);

    return env->NewStringUTF(str.c_str());
}extern "C"
JNIEXPORT jstring JNICALL
Java_com_leo_robot_JNIUtils_doubleToString4(JNIEnv *env, jobject instance, jdouble num) {

    // TODO
    std::string str =  ur10.doubleToString(num);

    return env->NewStringUTF(str.c_str());
}

std::string jstring2str(JNIEnv *env, jstring jstr) {
    char *rtn = NULL;
    jclass clsstring = env->FindClass("java/lang/String");
    jstring strencode = env->NewStringUTF("GB2312");
    jmethodID mid = env->GetMethodID(clsstring, "getBytes", "(Ljava/lang/String;)[B");
    jbyteArray barr = (jbyteArray) env->CallObjectMethod(jstr, mid, strencode);
    jsize alen = env->GetArrayLength(barr);
    jbyte *ba = env->GetByteArrayElements(barr, JNI_FALSE);
    if (alen > 0) {
        rtn = (char *) malloc(alen + 1);
        memcpy(rtn, ba, alen);
        rtn[alen] = 0;
    }
    env->ReleaseByteArrayElements(barr, ba, 0);
    std::string stemp(rtn);
    free(rtn);
    return stemp;
}

//extern "C"
//JNIEXPORT jdouble JNICALL
//Java_com_leo_robot_JNIUtils_HexToDouble(JNIEnv *env, jobject instance, jbyteArray chars_) {
//    unsigned char *chars = (unsigned char*)env->GetByteArrayElements(chars_, 0);
//
//
//    // TODO
////    ur10.HexToDouble(chars);
//
////    env->ReleaseByteArrayElements(chars_, chars, 0);
//    return ur10.HexToDouble(chars);
//}


extern "C"
JNIEXPORT void JNICALL
Java_com_leo_robot_JNIUtils_GetDataPort29999__Ljava_lang_String_2Ljava_lang_String_2(JNIEnv *env, jobject instance,
                                                                                     jstring s_, jstring name_) {
    const char *s = env->GetStringUTFChars(s_, 0);
    const char *name = env->GetStringUTFChars(name_, 0);


    std::string str = jstring2str(env, s_);
    std::string str1 = jstring2str(env, name_);
    // TODO
    ur->GetDataPort29999(str,str1);

    env->ReleaseStringUTFChars(s_, s);
    env->ReleaseStringUTFChars(name_, name);
}

extern "C"
JNIEXPORT jstring JNICALL
Java_com_leo_robot_JNIUtils_ActionMove__Ljava_lang_String_2Ljava_lang_String_2(JNIEnv *env, jobject instance,
                                                                               jstring s_, jstring name_) {
    const char *s = env->GetStringUTFChars(s_, NULL);
    const char *name = env->GetStringUTFChars(name_, NULL);

    // TODO

    const string str2 =  ur->ActionMove((string)s,(string)name);
    LOGW("%p",ur);
    printf("%p",ur);
    return env->NewStringUTF(str2.data());
}


extern "C"
JNIEXPORT jstring JNICALL
Java_com_leo_robot_JNIUtils_ActionPose__Ljava_lang_String_2Ljava_lang_String_2(JNIEnv *env, jobject instance,
                                                                               jstring s_, jstring name_) {
    const char *s = env->GetStringUTFChars(s_, 0);
    const char *name = env->GetStringUTFChars(name_, 0);

    // TODO
    std::string str = jstring2str(env, s_);
    std::string str1 = jstring2str(env, name_);

    std::string str2 =   ur->ActionPose(str,str1);
    env->ReleaseStringUTFChars(s_, s);
    env->ReleaseStringUTFChars(name_, name);

    return env->NewStringUTF(str2.c_str());
}extern "C"
JNIEXPORT jstring JNICALL
Java_com_leo_robot_JNIUtils_ActionJoint__Ljava_lang_String_2Ljava_lang_String_2(JNIEnv *env, jobject instance,
                                                                                jstring s_, jstring name_) {
    const char *s = env->GetStringUTFChars(s_, 0);
    const char *name = env->GetStringUTFChars(name_, 0);

    // TODO
    std::string str = jstring2str(env, s_);
    std::string str1 = jstring2str(env, name_);

    std::string str2 =   ur->ActionJoint(str,str1);
    env->ReleaseStringUTFChars(s_, s);
    env->ReleaseStringUTFChars(name_, name);

    return env->NewStringUTF(str2.c_str());
}extern "C"
JNIEXPORT jstring JNICALL
Java_com_leo_robot_JNIUtils_ActionDash__Ljava_lang_String_2Ljava_lang_String_2(JNIEnv *env, jobject instance,
                                                                               jstring s_, jstring name_) {
    const char *s = env->GetStringUTFChars(s_, 0);
    const char *name = env->GetStringUTFChars(name_, 0);

    // TODO
    std::string str = jstring2str(env, s_);
    std::string str1 = jstring2str(env, name_);

    std::string str2 =   ur->ActionDash(str,str1);

    env->ReleaseStringUTFChars(s_, s);
    env->ReleaseStringUTFChars(name_, name);

    return env->NewStringUTF(str2.c_str());
}extern "C"
JNIEXPORT jstring JNICALL
Java_com_leo_robot_JNIUtils_ActionStopJ__Ljava_lang_String_2(JNIEnv *env, jobject instance, jstring name_) {
    const char *name = env->GetStringUTFChars(name_, 0);

    // TODO
    std::string na = jstring2str(env, name_);
    std::string str = ur->ActionStopJ(na);

    env->ReleaseStringUTFChars(name_, name);

    return env->NewStringUTF(str.c_str());
}extern "C"
JNIEXPORT void JNICALL
Java_com_leo_robot_JNIUtils_SetMoveSpeed__FLjava_lang_String_2(JNIEnv *env, jobject instance, jfloat v, jstring name_) {
    const char *name = env->GetStringUTFChars(name_, 0);

    // TODO
    std::string na = jstring2str(env, name_);
    ur->SetMoveSpeed(v,na);
    env->ReleaseStringUTFChars(name_, name);
}extern "C"
JNIEXPORT void JNICALL
Java_com_leo_robot_JNIUtils_SetMoveAcc__FLjava_lang_String_2(JNIEnv *env, jobject instance, jfloat v, jstring name_) {
    const char *name = env->GetStringUTFChars(name_, 0);

    // TODO
    std::string na = jstring2str(env, name_);
    ur->SetMoveAcc(v,na);
    env->ReleaseStringUTFChars(name_, name);
}extern "C"
JNIEXPORT void JNICALL
Java_com_leo_robot_JNIUtils_GetDataPort30003__Ljava_lang_String_2Ljava_lang_String_2(JNIEnv *env, jobject instance,
                                                                                     jstring s_, jstring name_) {
    const char *s = env->GetStringUTFChars(s_, NULL);
    const char *name = env->GetStringUTFChars(name_, NULL);

    // TODO

    ur->GetDataPort30003((string)s,(string)name);
    LOGW("%p",ur);
    printf("%p",ur);
}extern "C"
JNIEXPORT jstring JNICALL
Java_com_leo_robot_JNIUtils_testJni(JNIEnv *env, jobject instance) {

    // TODO
    string msg
    ur->GetDataPort30003(msg,"Marm");

    const string s1=ur->ActionDash(CMD_POWER_ON,Marm);
    const string s2=ur->ActionJoint(ACTION_J0_1 ,Marm);
    const string s3=ur->ActionMove(ACTION_MOVE_1,Marm);
    const string s4=ur->ActionPose(ACTION_POSE_1,Marm);
    const string s5=ur->ActionStopJ(Marm);
    string s6=s1+s2+s3+s4+s5;
    return env->NewStringUTF(s6.data());
}extern "C"
JNIEXPORT jstring JNICALL
Java_com_leo_robot_JNIUtils_testJni2(JNIEnv *env, jobject instance, jstring msg_) {
    const char *msg = env->GetStringUTFChars(msg_, 0);

    // TODO
    string str1 = jstring2str(env,msg_);
    ur->GetDataPort30003(str1,"Marm");

//    env->ReleaseStringUTFChars(msg_, msg);

//    const string s1=ur.ActionDash(CMD_POWER_ON,Marm);
//    const string s2=ur.ActionJoint(ACTION_J0_1 ,Marm);
    const string s3=ur->ActionMove(ACTION_MOVE_1,Marm);
//    const string s4=ur.ActionPose(ACTION_POSE_1,Marm);
//    const string s5=ur.ActionStopJ(Marm);
//    string s6=s1+s2+s3+s4+s5;
    return env->NewStringUTF(s3.data());
}extern "C"
JNIEXPORT jstring JNICALL
Java_com_leo_robot_JNIUtils_testJni3(JNIEnv *env, jobject instance, jstring msg_, jstring mode_, jstring name_) {
    const char *msg = env->GetStringUTFChars(msg_, NULL);
    const char *mode = env->GetStringUTFChars(mode_, NULL);
    const char *name = env->GetStringUTFChars(name_, NULL);

    // TODO
    ur->GetDataPort30003((string)msg,(string)name);
    const string str2 =  ur->ActionMove((string)mode,string(name));
//    LOGW("%p",ur);
//    printf("%p",ur);
//    env->ReleaseStringUTFChars(msg_, msg);
//    env->ReleaseStringUTFChars(mode_, mode);
//    env->ReleaseStringUTFChars(name_, name);

    return env->NewStringUTF(str2.data());
}